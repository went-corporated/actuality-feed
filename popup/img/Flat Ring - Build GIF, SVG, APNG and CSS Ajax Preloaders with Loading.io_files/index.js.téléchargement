(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
// Generated by LiveScript 1.3.0
(function(){
  var ret;
  ret = {
    id: 'flat-ring',
    type: 'spinner',
    name: "Flat Ring",
    desc: "wheel like rotate ring for your flat design project.",
    tags: ['donut', 'pie', 'ring', 'rotate', 'flat', 'design', 'circular', 'circle', 'round', 'wheel'],
    slug: "flat-circle-spinner",
    license: 'pro',
    support: {
      css: false
    },
    edit: {
      maxlen: {
        name: "Max",
        type: 'number',
        'default': 50,
        priority: 1.4,
        min: 1
      },
      minlen: {
        name: "Min",
        type: 'number',
        'default': 10,
        priority: 1.5,
        min: 1
      },
      radius: {
        name: "Radius",
        type: 'number',
        'default': 30,
        priority: 1.6,
        min: 1
      },
      w: {
        name: "Thick 1",
        type: 'number',
        'default': 10,
        priority: 1.7,
        min: 0,
        max: 30
      },
      innerWidth: {
        name: "Thick 2",
        type: 'number',
        'default': 10,
        priority: 1.8,
        min: 1,
        max: 30
      },
      stroke: {
        name: "Color 1",
        type: 'color',
        'default': '#f8b26a',
        priority: 1.1
      },
      stroke2: {
        name: "Color 2",
        type: 'color',
        'default': '#abbd81',
        priority: 1.2
      },
      base: {
        name: "Base",
        type: 'color',
        'default': '#849b87',
        priority: 1.3
      },
      round: {
        name: "Round",
        type: 'boolean',
        'default': false,
        priority: 1.35
      }
    },
    watch: function(n, o){
      var lc, len, minlen, maxlen, a1, a2, a3, a4, c, hsl, r, x1, y1, x2, y2, x3, y3, x4, y4;
      lc = this.local;
      len = n.radius * Math.PI * 2;
      minlen = len * n.minlen * 0.01;
      maxlen = len * n.maxlen * 0.01;
      a1 = minlen;
      a2 = len - minlen;
      a3 = maxlen;
      a4 = len - maxlen;
      lc.linecap = n.round ? "round" : "square";
      c = ldColor.web(n.base);
      if (c) {
        hsl = ldColor.hsl(n.base);
        lc.dark = ldColor.web(hsl.l > 0.3
          ? ldColor.darker(hsl)
          : ldColor.lighter(hsl));
      }
      r = n.radius + n.width * 0.5;
      x1 = 50 - r * Math.cos(Math.PI * 0.25);
      y1 = 50 + r * Math.sin(Math.PI * 0.25);
      x2 = 50 + r * Math.cos(Math.PI * 0.25);
      y2 = 50 - r * Math.sin(Math.PI * 0.25);
      x3 = x2 + 100;
      y3 = y2 + 100;
      x4 = x1 + 100;
      y4 = y1 + 100;
      lc.d = "M" + x1 + " " + y1 + " A" + r + " " + r + " 0 0 1 " + x2 + " " + y2 + " L" + x3 + " " + y3 + " L" + x4 + " " + y4 + " Z";
      return lc.a1 = a1, lc.a2 = a2, lc.a3 = a3, lc.a4 = a4, lc;
    },
    dom: function(cfg){
      var lc, dasharray;
      lc = this.local;
      dasharray = [lc.a1 + " " + lc.a2, lc.a3 + " " + lc.a4, lc.a1 + " " + lc.a2].join(";");
      return "<defs><mask id=\"$id-mask\"><circle cx=\"50\" cy=\"50\" r=\"45\" fill=\"" + cfg.base + "\"/></mask></defs>\n<circle cx=\"50\" cy=\"50\" r=\"45\" fill=\"" + cfg.base + "\"/>\n<path d=\"" + lc.d + "\" fill=\"" + lc.dark + "\" mask=\"url(#$id-mask)\"/>\n<circle cx=\"50\" cy=\"50\" r=\"" + cfg.radius + "\" stroke=\"" + cfg.stroke2 + "\" stroke-width=\"" + cfg.w + "\" fill=\"none\"/>\n<circle cx=\"50\" cy=\"50\" r=\"" + cfg.radius + "\" stroke=\"" + cfg.stroke + "\" stroke-width=\"" + cfg.innerWidth + "\" \nstroke-linecap=\"" + lc.linecap + "\" fill=\"none\">\n  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\"\n  dur=\"" + 1 / cfg.speed + "s\" keyTimes=\"0;0.5;1\" values=\"0 50 50;180 50 50;720 50 50\"/>\n  <animate attributeName=\"stroke-dasharray\" repeatCount=\"indefinite\"\n  dur=\"" + 1 / cfg.speed + "s\" keyTimes=\"0;0.5;1\" values=\"" + dasharray + "\"/>\n</circle>";
    }
  };
  if (typeof module != 'undefined' && module !== null) {
    module.exports = ret;
  }
  if (typeof ModManager != 'undefined' && ModManager !== null) {
    ModManager.register(ret);
  }
  return ret;
})();
},{}]},{},[1]);
